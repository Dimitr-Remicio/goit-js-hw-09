{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAOC,SAASC,cAAc,SAC9BC,EAAWF,SAASC,cAAc,uBAClCE,EAAUH,SAASC,cAAc,sBACjCG,EAAYJ,SAASC,cAAc,wBAGzC,SAASI,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KAELH,GACFF,EAAQ,C,SAAEH,E,MAAUC,IAGtBG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAC1BA,EAAM,G,CAMbR,EAAKgB,iBAAiB,UAAU,KAC9BC,MAAMC,iBAEN,IAAIC,EAAQC,OAAOjB,EAASkB,OACxBC,EAAOF,OAAOhB,EAAQiB,OACtBE,EAASH,OAAOf,EAAUgB,OAC1BG,EAAW,GAEXL,EAAQ,GAAKG,EAAO,GAAKC,GAAU,IAErCE,EAAA3B,GAAS4B,OAAOC,QAAQ,sCAI1B,IAAK,IAAIC,EAAI,EAAGA,GAAKL,EAAQK,GAAK,EAChCJ,EAAWI,EAEXtB,EAAckB,EAAUL,GACrBU,MAAK,EAACtB,SAAEA,EAAQC,MAAEA,MACjBiB,EAAA3B,GAAS4B,OAAOI,QAAQ,sBAAoBvB,QAAiBC,MAAU,IAExEuB,OAAM,EAACxB,SAAEA,EAAQC,MAAEA,MAClBiB,EAAA3B,GAAS4B,OAAOC,QAAQ,uBAAqBpB,QAAeC,MAAU,IAE1EW,GAASG,EAEXtB,EAAKgC,OAAO","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst form = document.querySelector('.form');\nconst delayEle = document.querySelector('input[name=\"delay\"]');\nconst stepEle = document.querySelector('input[name=\"step\"]');\nconst amountEle = document.querySelector('input[name=\"amount\"]');\n\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n\n      if (shouldResolve) {\n        resolve({ position, delay });\n      }\n\n      reject({ position, delay });\n    }, delay);\n\n  });\n}\n\n\nform.addEventListener('submit', () => {\n  event.preventDefault();\n\n  let delay = Number(delayEle.value);\n  let step = Number(stepEle.value);\n  let amount = Number(amountEle.value);\n  let position = 0;\n\n  if (delay < 0 || step < 0 || amount <= 0) {\n\n    Notiflix.Notify.failure(`porfavor escriba el valor correcto`);\n\n  }\n\n  for (let i = 1; i <= amount; i += 1) {\n    position = i;\n\n    createPromise(position, delay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(`✅ Promesa cumplida ${position} en ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(`❌ Promesa rechazada ${position} en ${delay}ms`);\n      });\n    delay += step;\n  }\n  form.reset();\n});\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$form","document","querySelector","$47d4ff9957288465$var$delayEle","$47d4ff9957288465$var$stepEle","$47d4ff9957288465$var$amountEle","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","addEventListener","event","preventDefault","delay1","Number","value","step","amount","position1","$parcel$interopDefault","Notify","failure","i","then","success","catch","reset"],"version":3,"file":"03-promises.67f7de65.js.map"}