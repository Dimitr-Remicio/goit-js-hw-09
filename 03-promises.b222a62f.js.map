{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAOC,SAASC,cAAc,SAC9BC,EAAWF,SAASC,cAAc,uBAClCE,EAAUH,SAASC,cAAc,sBACjCG,EAAYJ,SAASC,cAAc,wBAGzC,SAASI,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WAELH,GACFF,EAAQ,CAAEH,WAAUC,UAGtBG,EAAO,CAAEJ,WAAUC,S,GAClBA,E,IAMPR,EAAKgB,iBAAiB,UAAU,WAC9BC,MAAMC,iBAEN,IAAIC,EAAQC,OAAOjB,EAASkB,OACxBC,EAAOF,OAAOhB,EAAQiB,OACtBE,EAASH,OAAOf,EAAUgB,QAG1BF,EAAQ,GAAKG,EAAO,GAAKC,GAAU,IAErCC,EAAA1B,GAAS2B,OAAOC,QAAS,sCAI3B,IAAK,IAAIC,EAAI,EAAGA,GAAKJ,EAAQI,GAAK,EAGhCrB,EAFWqB,EAEaR,GACrBS,MAAK,SAAAC,G,IAAGtB,EAAQsB,EAARtB,SAAUC,EAAKqB,EAALrB,MACjBgB,EAAA1B,GAAS2B,OAAOK,QAAQ,sBAAuCC,OAAfxB,EAAS,QAAYwB,OAANvB,EAAM,M,IAEtEwB,OAAM,SAAAH,G,IAAGtB,EAAQsB,EAARtB,SAAUC,EAAKqB,EAALrB,MAClBgB,EAAA1B,GAAS2B,OAAOC,QAAQ,uBAAsCK,OAAfxB,EAAS,QAAYwB,OAANvB,EAAM,M,IAExEW,GAASG,EAEXtB,EAAKiC,O","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst form = document.querySelector('.form');\nconst delayEle = document.querySelector('input[name=\"delay\"]');\nconst stepEle = document.querySelector('input[name=\"step\"]');\nconst amountEle = document.querySelector('input[name=\"amount\"]');\n\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n\n      if (shouldResolve) {\n        resolve({ position, delay });\n      }\n\n      reject({ position, delay });\n    }, delay);\n\n  });\n}\n\n\nform.addEventListener('submit', () => {\n  event.preventDefault();\n\n  let delay = Number(delayEle.value);\n  let step = Number(stepEle.value);\n  let amount = Number(amountEle.value);\n  let position = 0;\n\n  if (delay < 0 || step < 0 || amount <= 0) {\n\n    Notiflix.Notify.failure(`porfavor escriba el valor correcto`);\n\n  }\n\n  for (let i = 1; i <= amount; i += 1) {\n    position = i;\n\n    createPromise(position, delay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(`✅ Promesa cumplida ${position} en ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(`❌ Promesa rechazada ${position} en ${delay}ms`);\n      });\n    delay += step;\n  }\n  form.reset();\n});\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$form","document","querySelector","$ce04d3a99e08e73b$var$delayEle","$ce04d3a99e08e73b$var$stepEle","$ce04d3a99e08e73b$var$amountEle","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","addEventListener","event","preventDefault","delay1","Number","value","step","amount","$parcel$interopDefault","Notify","failure","i","then","param","success","concat","catch","reset"],"version":3,"file":"03-promises.b222a62f.js.map"}